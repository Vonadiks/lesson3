цель этой книги - обучить читателей основам программирования на Java. В ней
применяется пошаговый подход к освоению языковых средств, основанный на
анализе многочисленных примеров, разработке несложных проектов и закреплении полученных знаний путем ответа на вопросы и выполнения упражнений мя самопроверки. Изучение Java по этой книге не требует наличия предыдущего опыта программирования. Книга начинается с рассмотрения элементарных понятий, включая компиляцию
и выполнение программ. Затем речь пойдет о ключевых словах и языковых средствах и
конструкциях, составляющих основу Java. После этого рассматриваются более сложные
языковые средства, в том числе мноrопоточное программирование и обобщения. Завершается книга знакомством с библиотекой Swing и JavaFX. Все это позволит вам получить четкое представление об основах программирования на Java.
Но эта книга - лишь первый шаг на пути к освоению Java, поскольку мя профессионального программирования на Java нужно знать не только составные элементы этого языка, но и многочисленные библиотеки и инструменты, существенно упрощающие
процесс разработки программ. Проработав материал книги, вы получите достаточно
знаний, чтобы приступить к изучению всех остальных аспектов Java.
Эволюция Java
Немногие языки могут похвастаться тем, что им удалось изменить общее представление о программировании. Но и в этой "элитной" группе один язык выделяется среди
прочих. Его влияние очень быстро почувствовали все программисты. Речь, конечно же,
идет о Java. Не будет преувеличением сказать, что выпуск в 1995 году компанией Sun
Microsystems lnc. версии Java 1.0 вызвал настоящую революцию в программировании.
В результате "Всемирная паутина" стала по-настоящему интерактивной средой. Между
тем Java установил новый стандарт в разработке языков программирования.
Со временем Java усовершенствовался. В отличие от многих других языков, в которых новые средства внедрялись относительно меменно, Java всегда находился на переднем крае разработки языков программирования. Одной из причин, позволивших
добиться этого, послужило создание вокруг Java плодотворной атмосферы, способствовавшей внедрению новых идей. В результате язык Java постоянно совершенствовался:
одни его изменения были незначительными, а другие - весьма существенными.
Первым существенным обновлением Java стала версия 1.1. Изменения в ней бьmи
более значительны, чем это обычно подразумевает переход к новой версии языка программирования. В версии Java 1.1 были добавлены многие библиотечные элементы, Введение 19
переопределены средства обработки событий, перекомпонованы многие функциональные средства исходной библиотеки версии 1.0.
Следующим этапом развития данного языка стала платформа Java 2, где цифра 2 означает "второе поколение". Ее появление стало поворотным событием, ознаменовавшим начало "новой эпохи" Java. Первым выпуском Java 2 стала версия 1.2. На первый
взгляд, несоответствие номеров в обозначениях Java 2 и версии 1.2 может показаться
странным. Дело в том, что номером 1.2 сначала обозначались библиотеки Java и только
затем - весь выпуск. Компания Sun перекомпоновала программный продукт Java в J2SE
(Java 2 Platform Standard Edition - Стандартная версия платформы Java 2), и с тех пор
номера версий стали относиться именно к этому продукту.
Затем появилась версия J2SE 1.3, в которую были внесены первые значительные
изменения по сравнению с первоначальным выпуском Java 2. Новые функциональные
средства были в основном добавлены к уже существующим и более тесно связаны со
средой разработки. Версия J2SE 1.4 стала очередным этапом в развитии Java. Она содержала новые важные средства, в том числе цепочки исключений, канальный ввод-вывод
и ключевое слово assert.
Следующая версия J2SE 5, по сути, стала вторым революционным преобразованием
Java. В отличие от большинства предьщущих модернизаций, которые сводились к важным, но предсказуемым усовершенствованиям, в J2SE 5 были существенно расширены
рамки применения и функциональные возможности языка, а также повышена его производительность. Для более ясного представления о масштабах изменений, внесенных в
версии J2SE 5, ниже дан перечень появившихся возможностей:
-о обобщения;
if! автоупаковка и автораспаковка;
е перечисления;
Ф усовершенствованный вариант цикла for;
� список аргументов переменной длины;
$ статический импорт;
,11, аннотации.
В этот список не вошли второстепенные дополнения и поэтапные изменения, характерные для перехода к новой версии. Каждый элемент этого списка представляет собой
значительное усовершенствование Java. Для поддержки одних нововведений, в том числе
обобщений, варианта for-each цикла for и строки аргументов переменной длины, передаваемой методу, понадобилось ввести новые синтаксические конструкции в язык. Другие
нововведения, такие как автоупаковка и автораспаковка, повлияли на семантику языка.
И наконец, аннотации открьши совершенно новые возможности для программирования.
Особая значимость описанных новшеств проявилась в том, что новая версия получила номер "5". Можно было ожидать, что номером очередной версии Java будет 1.5.
Но нововведения были настолько существенными, что переход от версии 1.4 к 1.5 не
отражал бы масштабы внесенных изменений. Поэтому разработчики из компании Sun
решили увеличить номер версии до 5, подчеркнув тем самым важность нововведений.
В итоге новая версия получила название J2SE 5, а комплект разработчика приложений
на языке Java стал называться JDK 5. Но ради согласованности с предыдущими версиями бьшо решено использовать 1.5 в качестве внутреннего номера версии, на который
также иногда ссылаются как на номер версии разработки. Цифра "5" в J2SE 5 означает
номер версии программного продукта. 20 Java 8: руководство для начинающих. 6-е издание
Следующая версия Java была названа Java SE 6. Это означает, что в компании Sun
вновь решили изменить название платформы Java. Прежде всего, из названия исчезла
цифра "2". Теперь платформа стала называться Java SE, официальным именем продукта
стало Java Platform, Standard Edition 6, а комплект разработчика приложений получил название JDK 6. Как и цифра "5" в названии J2SE 5, цифра "6" в Java SE 6 означает номер
версии программного продукта, тогда как внутренним номером версии является 1.6.
Версия Java SE 6 создавалась на основе платформы J2SE 5, но отличалась от последней рядом нововведений. Изменения в этой версии не такие масштабные, как в
предыдущей, но в ней были улучшены библиотеки интерфейса прикладного программирования (API), добавлен ряд новых пакетов и доработана исполняющая система.
По существу, в версии Java SE 6 были закреплены усовершенствования, внедренные в
J2SE 5.
Следующая версия Java получила название Java SE 7, а соответствующий комплект
разработки приложений - JDK 7. Данной версии присвоен внутренний номер 1.7.
Java SE - это первая основная версия Java, выпущенная после того, как компания Sun
Microsystems lnc. была приобретена компанией Oracle (этот процесс начался в апреле
2009 года и завершился в январе 2010 года). В версии Java SE 7 появилось немало новых
средств, в том числе существенные дополнения были включены как в сам язык, так и
в стандартные библиотеки API. Также была усовершенствована исполняющая система
Java, в которой теперь поддерживаются программы, написанные на других языках программирования.
Наиболее важные средства, внедренные в версии Java SE 7 и рассматриваемые в этой
книге, были разработаны в рамках проекта Project Coin. В этом проекте преследовалась
цель определить ряд незначительных изменений в языке Java, которые должны быть
внедрены в JDK 7. И хотя эти изменения в целом считаются незначительными, их влияние на процесс разработки программ нельзя недооценивать. На самом деле для многих
программистов они могут стать самыми важными среди всех новых средств, вошедших в
Java SE 7. Вот краткий перечень новых языковых средств Java SE 7:
,w возможность управления выбором в переключателе swi tch с помощью объектов
класса String;
')) двоичные целочисленные литералы;
w- символы подчеркивания в числовых литералах;
<# расширенный оператор try, называемый оператором try с ресурсами и поддерживающий автоматическое управление ресурсами (например, теперь файловый
поток может быть закрыт, если в нем больше нет необходимости);
01 выводимость типов при создании обобщенного экземпляра объекта.
� усовершенствованная обработка исключений, благодаря которой несколько исключений могут быть перехвачены одним (групповым) оператором catch, а также улучшенный контроль типов для повторно генерируемых исключений.
Как видите, средства, отнесенные в рамках проекта Project Coin к разряду незначительных языковых изменений, обеспечили преимущества, которые вовсе нельзя считать
незначительными. В частности, оператор try с ресурсами существенно сокращает объем
кода. Java SE 8
Введение 21
Для новейшей версии Java - Java SE 8 - требуется комплект разработчика JDK 8,
имеющий внутренний номер версии 1.8. Комплект JDK 8 существенно расширяет возможности языка Java за счет добавления нового языкового средства - лямбда-выражений. Включение в язык лямбда-выражений, изменяющих как концептуальную основу
программных решений, так и способ написания кода на Java, будет иметь далеко идущие последствия. Использование лямбда-выражений позволяет упростить исходный код
при создании некоторых языковых конструкций и уменьшить его объем. Добавление в
Java лямбда-выражений привело к появлению в языке нового оператора(->) и нового
синтаксического элемента. Эти нововведения лишний раз подтверждают статус Java как
живого, развивающегося языка, чего и ожидают от него пользователи.
Помимо лямбда-выражений, в JDK 8 добавлено много новых полезных средств. Так,
начиная с JDK 8 стало возможным определять реализации по умолчанию для методов,
специфицируемых интерфейсами. Кроме того, в JDK 8 включена поддержка JavaFX -
новой библиотеки графического пользовательского интерфейса (GUI). Ожидается, что
вскоре JavaFX станет непременной частью почти всех Jаvа-приложений и практически
вытеснит технологию Swing в большинстве GUI-проектов. В завершение можно сказать,
что платформа Java SE 8 представляет собой ключевой выпуск, который существенно
расширяет возможности языка и вынуждает пересмотреть подходы к написанию кода
на Java. Влияние описанных нововведений будет ощущаться всеми разработчиками
Jаvа-проrрамм еще протяжении многих лет.
Предыдущее издание этой книги было переработано с учетом всего вышесказанного
и теперь отражает многочисленные новшества, обновления и дополнения, появившиеся
в версии Java SE 8.
Структура книги
Книга представляет собой учебное пособие, разделенное на 17 глав, в каждой из которых рассматриваются отдельные вопросы программирования на Java. Материал каждой последующей главы основывается на предыдущей. Отличительная особенность
книги состоит в том, что в ней используется ряд специальных приемов, повышающих
эффективность обучения.
Основные навыки и понятия
Каждая глава начинается с рассмотрения самых важных для программирования навыков, которыми читателю следует овладеть.
Вопросы и упражнения для самопроверки
В конце каждой главы приведены вопросы и упражнения для самопроверки, позволяющие читателю проверить приобретенные им знания. Ответы на вопросы и решения
к упражнениям приведены в приложении А.